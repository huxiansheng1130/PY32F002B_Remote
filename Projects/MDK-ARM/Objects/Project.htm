<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Sun Mar 16 17:04:20 2025
<BR><P>
<H3>Maximum Stack Usage =        328 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; main_loop &rArr; qmi8658a_loop &rArr; rtt_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[b]">ADC_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">ADC_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[b]">ADC_COMP_IRQHandler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[8]">EXTI0_1_IRQHandler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[9]">EXTI2_3_IRQHandler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[a]">EXTI4_15_IRQHandler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[6]">FLASH_IRQHandler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[1b]">Filter_Apply</a> from imualgo_axis9.o(.text.Filter_Apply) referenced from qmi8658a_driver.o(.text.qmi8658a_data_process)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[10]">I2C1_IRQHandler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[e]">LPTIM1_IRQHandler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[7]">RCC_IRQHandler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[11]">SPI1_IRQHandler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[14]">SystemInit</a> from system_py32f002b.o(.text.SystemInit) referenced from startup_py32f002bxx.o(.text)
 <LI><a href="#[f]">TIM14_IRQHandler</a> from qmi8658a_driver.o(.text.TIM14_IRQHandler) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[c]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from 433_send_driver.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[d]">TIM1_CC_IRQHandler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[12]">USART1_IRQHandler</a> from startup_py32f002bxx.o(.text) referenced from startup_py32f002bxx.o(RESET)
 <LI><a href="#[15]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_py32f002bxx.o(.text)
 <LI><a href="#[1e]">cosf</a> from cosf.o(i.cosf) referenced from imualgo_axis9.o(.text.qst_fusion_update)
 <LI><a href="#[19]">kb_gpio_init_col</a> from keyboard_driver.o(.text.kb_gpio_init_col) referenced from keyboard_driver.o(.text.keybroad_init)
 <LI><a href="#[18]">kb_gpio_init_row</a> from keyboard_driver.o(.text.kb_gpio_init_row) referenced from keyboard_driver.o(.text.keybroad_init)
 <LI><a href="#[16]">kb_gpio_set_high</a> from keyboard_driver.o(.text.kb_gpio_set_high) referenced from keyboard_driver.o(.text.kb_matrix_scan)
 <LI><a href="#[17]">kb_gpio_set_low</a> from keyboard_driver.o(.text.kb_gpio_set_low) referenced from keyboard_driver.o(.text.kb_matrix_scan)
 <LI><a href="#[1a]">kb_wakeup_exti_config</a> from keyboard_driver.o(.text.kb_wakeup_exti_config) referenced from keyboard_driver.o(.text.keybroad_init)
 <LI><a href="#[13]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[1d]">qmi8658_read_reg</a> from qmi8658a_driver.o(.text.qmi8658_read_reg) referenced from qmi8658a_driver.o(.text.qmi8658a_setup_init)
 <LI><a href="#[1c]">qmi8658a_write_byte</a> from qmi8658a_driver.o(.text.qmi8658a_write_byte) referenced from qmi8658a_driver.o(.text.qmi8658a_init)
 <LI><a href="#[1f]">sinf</a> from sinf.o(i.sinf) referenced from imualgo_axis9.o(.text.qst_fusion_update)
 <LI><a href="#[20]">sqrtf</a> from sqrtf.o(i.sqrtf) referenced from imualgo_axis9.o(.text.qst_fusion_update)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[15]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(.text)
</UL>
<P><STRONG><a name="[98]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[21]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[32]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[99]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[9a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[9b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[9c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[9d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>ADC_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f002bxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_tim_config
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_driver_init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_send
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_Apply
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cutoff_frequency
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_nomag_rotation_matrix
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrap_PI
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_Apply
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_nomag_rotation_matrix
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Filter_Apply
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cutoff_frequency
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_gyro_float
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_accel_float
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_nomag_rotation_matrix
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cutoff_frequency
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_gyro_float
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_init
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_fcmple</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_init
</UL>

<P><STRONG><a name="[7c]"></a>__aeabi_fcmplt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmplt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_init
</UL>

<P><STRONG><a name="[7a]"></a>__aeabi_fcmpge</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpge.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrap_PI
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_fcmpgt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpgt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrap_PI
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_dcmple</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dcmple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_dcmpgt</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dcmpgt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_gyro_float
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_accel_float
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_loop
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[80]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_I2C_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_loop
</UL>

<P><STRONG><a name="[25]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[a3]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[a4]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsqrt
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2a]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[90]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
</UL>

<P><STRONG><a name="[a6]"></a>scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fscalb.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>_fsqrt</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, fsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _fsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
</UL>

<P><STRONG><a name="[31]"></a>_frnd</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, frnd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _frnd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[22]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a7]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
</UL>

<P><STRONG><a name="[34]"></a>BSP_RCC_HSI_48MConfig</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, py32f002b_bsp_clock.o(.text.BSP_RCC_HSI_48MConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BSP_RCC_HSI_48MConfig &rArr; LL_Init1msTick &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetSystemCoreClock
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[1b]"></a>Filter_Apply</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, imualgo_axis9.o(.text.Filter_Apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Filter_Apply &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> qmi8658a_driver.o(.text.qmi8658a_data_process)
</UL>
<P><STRONG><a name="[57]"></a>LL_EXTI_Init</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, py32f002b_ll_exti.o(.text.LL_EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_wakeup_exti_config
</UL>

<P><STRONG><a name="[50]"></a>LL_GPIO_Init</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, py32f002b_ll_gpio.o(.text.LL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_iic_config
</UL>

<P><STRONG><a name="[38]"></a>LL_I2C_Init</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, py32f002b_ll_i2c.o(.text.LL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LL_I2C_Init &rArr; LL_RCC_GetSystemClocksFreq &rArr; RCC_GetSystemClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_iic_config
</UL>

<P><STRONG><a name="[35]"></a>LL_Init1msTick</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, py32f002b_ll_utils.o(.text.LL_Init1msTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LL_Init1msTick &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RCC_HSI_48MConfig
</UL>

<P><STRONG><a name="[39]"></a>LL_RCC_GetSystemClocksFreq</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, py32f002b_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_RCC_GetSystemClocksFreq &rArr; RCC_GetSystemClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_I2C_Init
</UL>

<P><STRONG><a name="[36]"></a>LL_SetSystemCoreClock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, py32f002b_ll_utils.o(.text.LL_SetSystemCoreClock))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RCC_HSI_48MConfig
</UL>

<P><STRONG><a name="[76]"></a>LL_TIM_Init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, py32f002b_ll_tim.o(.text.LL_TIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_TIM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_tim_config
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_driver_init
</UL>

<P><STRONG><a name="[3b]"></a>RCC_GetSystemClockFreq</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, py32f002b_ll_rcc.o(.text.RCC_GetSystemClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetSystemClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_LSI_GetFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>

<P><STRONG><a name="[3d]"></a>SEGGER_RTT_Write</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, segger_rtt.o(.text.SEGGER_RTT_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>

<P><STRONG><a name="[3f]"></a>SEGGER_RTT_WriteNoLock</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, segger_rtt.o(.text.SEGGER_RTT_WriteNoLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAvailWriteSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[43]"></a>SEGGER_RTT_vprintf</STRONG> (Thumb, 634 bytes, Stack size 144 bytes, segger_rtt_printf.o(.text.SEGGER_RTT_vprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtt_printf
</UL>

<P><STRONG><a name="[14]"></a>SystemInit</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, system_py32f002b.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(.text)
</UL>
<P><STRONG><a name="[f]"></a>TIM14_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, qmi8658a_driver.o(.text.TIM14_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, 433_send_driver.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f002bxx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>WaitMs</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, py32f002b_ll_utils.o(.text.WaitMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WaitMs &rArr; clock_time &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_init
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_write_byte
</UL>

<P><STRONG><a name="[48]"></a>WaitUs</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, py32f002b_ll_utils.o(.text.WaitUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WaitUs &rArr; clock_time &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_setup_init
</UL>

<P><STRONG><a name="[4b]"></a>all_key_release_event</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, keyboard_handle.o(.text.all_key_release_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = all_key_release_event
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_close
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_loop
</UL>

<P><STRONG><a name="[47]"></a>clock_time</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, py32f002b_ll_utils.o(.text.clock_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = clock_time &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUs
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMs
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_matrix_scan
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_status_set_event
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_loop
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time_exceed
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_send_loop
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_status_init
</UL>

<P><STRONG><a name="[4d]"></a>clock_time_exceed</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, py32f002b_ll_utils.o(.text.clock_time_exceed))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = clock_time_exceed &rArr; clock_time &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_matrix_scan
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_status_set_event
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_loop
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_send_loop
</UL>

<P><STRONG><a name="[4e]"></a>dev_iic_config</STRONG> (Thumb, 116 bytes, Stack size 64 bytes, i2c_driver.o(.text.dev_iic_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = dev_iic_config &rArr; LL_I2C_Init &rArr; LL_RCC_GetSystemClocksFreq &rArr; RCC_GetSystemClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_I2C_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[8e]"></a>device_pair_id_read</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, flash_handle.o(.text.device_pair_id_read))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[51]"></a>device_status_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app.o(.text.device_status_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = device_status_init &rArr; clock_time &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[64]"></a>device_status_loop</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app.o(.text.device_status_loop))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[52]"></a>i2c_read_byte</STRONG> (Thumb, 400 bytes, Stack size 48 bytes, i2c_driver.o(.text.i2c_read_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = i2c_read_byte &rArr; LL_I2C_ClearFlag_ADDR
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_I2C_ClearFlag_ADDR
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658_read_reg
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_byte
</UL>

<P><STRONG><a name="[54]"></a>i2c_write_byte</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, i2c_driver.o(.text.i2c_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = i2c_write_byte &rArr; LL_I2C_ClearFlag_ADDR
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_I2C_ClearFlag_ADDR
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_write_byte
</UL>

<P><STRONG><a name="[75]"></a>init_state_recognition</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, imualgo_axis9.o(.text.init_state_recognition))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_setup_init
</UL>

<P><STRONG><a name="[56]"></a>kb_gpio_event_handler</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, keyboard_driver.o(.text.kb_gpio_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kb_gpio_event_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_matrix_scan
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keybroad_init
</UL>

<P><STRONG><a name="[19]"></a>kb_gpio_init_col</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, keyboard_driver.o(.text.kb_gpio_init_col))
<BR>[Address Reference Count : 1]<UL><LI> keyboard_driver.o(.text.keybroad_init)
</UL>
<P><STRONG><a name="[18]"></a>kb_gpio_init_row</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, keyboard_driver.o(.text.kb_gpio_init_row))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kb_gpio_init_row
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keyboard_driver.o(.text.keybroad_init)
</UL>
<P><STRONG><a name="[16]"></a>kb_gpio_set_high</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keyboard_driver.o(.text.kb_gpio_set_high))
<BR>[Address Reference Count : 1]<UL><LI> keyboard_driver.o(.text.kb_matrix_scan)
</UL>
<P><STRONG><a name="[17]"></a>kb_gpio_set_low</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keyboard_driver.o(.text.kb_gpio_set_low))
<BR>[Address Reference Count : 1]<UL><LI> keyboard_driver.o(.text.kb_matrix_scan)
</UL>
<P><STRONG><a name="[55]"></a>kb_matrix_scan</STRONG> (Thumb, 356 bytes, Stack size 40 bytes, keyboard_driver.o(.text.kb_matrix_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = kb_matrix_scan &rArr; clock_time_exceed &rArr; clock_time &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_gpio_event_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time_exceed
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_loop
</UL>

<P><STRONG><a name="[1a]"></a>kb_wakeup_exti_config</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, keyboard_driver.o(.text.kb_wakeup_exti_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kb_wakeup_exti_config
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keyboard_driver.o(.text.keybroad_init)
</UL>
<P><STRONG><a name="[8b]"></a>key_combination_events</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, keyboard_handle.o(.text.key_combination_events))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = key_combination_events
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_key_long_press_event
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_key_short_press_event
</UL>

<P><STRONG><a name="[58]"></a>key_press_timeout_event</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, keyboard_handle.o(.text.key_press_timeout_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = key_press_timeout_event
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_close
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;re_send_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_loop
</UL>

<P><STRONG><a name="[5a]"></a>key_status_set_event</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, keyboard_handle.o(.text.key_status_set_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = key_status_set_event &rArr; clock_time_exceed &rArr; clock_time &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time_exceed
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_loop
</UL>

<P><STRONG><a name="[5b]"></a>keyboard_loop</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, keyboard_handle.o(.text.keyboard_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = keyboard_loop &rArr; kb_matrix_scan &rArr; clock_time_exceed &rArr; clock_time &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_matrix_scan
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_status_set_event
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_key_release_event
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_press_timeout_event
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_key_long_press_event
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_key_short_press_event
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_key_long_press_event
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_key_short_press_event
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time_exceed
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[60]"></a>keybroad_init</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, keyboard_driver.o(.text.keybroad_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = keybroad_init &rArr; kb_gpio_event_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kb_gpio_event_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[4c]"></a>led_close</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, led_driver.o(.text.led_close))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_key_release_event
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_press_timeout_event
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_key_short_press_event
</UL>

<P><STRONG><a name="[8d]"></a>led_init</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, led_driver.o(.text.led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = led_init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[88]"></a>led_open</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, led_driver.o(.text.led_open))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_key_short_press_event
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_key_ntc_packet
</UL>

<P><STRONG><a name="[13]"></a>main</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = main &rArr; main_loop &rArr; qmi8658a_loop &rArr; rtt_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtt_printf
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[63]"></a>main_loop</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app.o(.text.main_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = main_loop &rArr; qmi8658a_loop &rArr; rtt_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_loop
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_loop
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_send_loop
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_status_loop
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>one_key_long_press_event</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, keyboard_handle.o(.text.one_key_long_press_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = one_key_long_press_event &rArr; one_key_short_press_event &rArr; send_key_ntc_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_key_ntc_packet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_key_short_press_event
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_loop
</UL>

<P><STRONG><a name="[5c]"></a>one_key_short_press_event</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, keyboard_handle.o(.text.one_key_short_press_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = one_key_short_press_event &rArr; send_key_ntc_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_key_ntc_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_key_long_press_event
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_loop
</UL>

<P><STRONG><a name="[86]"></a>protocol_command_encode</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, 433_protocol.o(.text.protocol_command_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = protocol_command_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_send
</UL>

<P><STRONG><a name="[1d]"></a>qmi8658_read_reg</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, qmi8658a_driver.o(.text.qmi8658_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = qmi8658_read_reg &rArr; i2c_read_byte &rArr; LL_I2C_ClearFlag_ADDR
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> qmi8658a_driver.o(.text.qmi8658a_setup_init)
</UL>
<P><STRONG><a name="[68]"></a>qmi8658a_data_process</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, qmi8658a_driver.o(.text.qmi8658a_data_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = qmi8658a_data_process &rArr; qst_fusion_update &rArr; qst_fusion_init &rArr; atan2f &rArr; __mathlib_flt_infnan2 &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_sensors_float
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_loop
</UL>

<P><STRONG><a name="[73]"></a>qmi8658a_driver_config</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, qmi8658a_driver.o(.text.qmi8658a_driver_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = qmi8658a_driver_config
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_setup_init
</UL>

<P><STRONG><a name="[6b]"></a>qmi8658a_init</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, qmi8658a_driver.o(.text.qmi8658a_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = qmi8658a_init &rArr; qmi8658a_write_byte &rArr; WaitMs &rArr; clock_time &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_byte
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMs
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_setup_init
</UL>

<P><STRONG><a name="[65]"></a>qmi8658a_loop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, qmi8658a_driver.o(.text.qmi8658a_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = qmi8658a_loop &rArr; rtt_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_data_process
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtt_printf
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[6f]"></a>qmi8658a_read_accel_float</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, qmi8658a_driver.o(.text.qmi8658a_read_accel_float))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = qmi8658a_read_accel_float &rArr; qmi8658a_read_byte &rArr; i2c_read_byte &rArr; LL_I2C_ClearFlag_ADDR
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_sensors_float
</UL>

<P><STRONG><a name="[6c]"></a>qmi8658a_read_byte</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, qmi8658a_driver.o(.text.qmi8658a_read_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = qmi8658a_read_byte &rArr; i2c_read_byte &rArr; LL_I2C_ClearFlag_ADDR
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_gyro_float
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_accel_float
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_init
</UL>

<P><STRONG><a name="[70]"></a>qmi8658a_read_gyro_float</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, qmi8658a_driver.o(.text.qmi8658a_read_gyro_float))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = qmi8658a_read_gyro_float &rArr; qmi8658a_read_byte &rArr; i2c_read_byte &rArr; LL_I2C_ClearFlag_ADDR
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_sensors_float
</UL>

<P><STRONG><a name="[69]"></a>qmi8658a_read_sensors_float</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, qmi8658a_driver.o(.text.qmi8658a_read_sensors_float))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = qmi8658a_read_sensors_float &rArr; qmi8658a_read_gyro_float &rArr; qmi8658a_read_byte &rArr; i2c_read_byte &rArr; LL_I2C_ClearFlag_ADDR
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_gyro_float
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_read_accel_float
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_data_process
</UL>

<P><STRONG><a name="[71]"></a>qmi8658a_setup_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, qmi8658a_driver.o(.text.qmi8658a_setup_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = qmi8658a_setup_init &rArr; qst_algo_init &rArr; set_cutoff_frequency &rArr; tanf &rArr; __mathlib_rredf2 &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_state_recognition
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUs
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_tim_config
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_driver_config
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_algo_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[72]"></a>qmi8658a_tim_config</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, qmi8658a_driver.o(.text.qmi8658a_tim_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = qmi8658a_tim_config &rArr; LL_TIM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_setup_init
</UL>

<P><STRONG><a name="[1c]"></a>qmi8658a_write_byte</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, qmi8658a_driver.o(.text.qmi8658a_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = qmi8658a_write_byte &rArr; WaitMs &rArr; clock_time &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitMs
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> qmi8658a_driver.o(.text.qmi8658a_init)
</UL>
<P><STRONG><a name="[74]"></a>qst_algo_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, qmi8658a_driver.o(.text.qst_algo_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = qst_algo_init &rArr; set_cutoff_frequency &rArr; tanf &rArr; __mathlib_rredf2 &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cutoff_frequency
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_setup_init
</UL>

<P><STRONG><a name="[78]"></a>qst_fusion_init</STRONG> (Thumb, 872 bytes, Stack size 48 bytes, imualgo_axis9.o(.text.qst_fusion_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = qst_fusion_init &rArr; atan2f &rArr; __mathlib_flt_infnan2 &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
</UL>

<P><STRONG><a name="[7e]"></a>qst_fusion_nomag_rotation_matrix</STRONG> (Thumb, 308 bytes, Stack size 48 bytes, imualgo_axis9.o(.text.qst_fusion_nomag_rotation_matrix))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = qst_fusion_nomag_rotation_matrix &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
</UL>

<P><STRONG><a name="[6a]"></a>qst_fusion_update</STRONG> (Thumb, 2640 bytes, Stack size 128 bytes, imualgo_axis9.o(.text.qst_fusion_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = qst_fusion_update &rArr; qst_fusion_init &rArr; atan2f &rArr; __mathlib_flt_infnan2 &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_nomag_rotation_matrix
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrap_PI
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_data_process
</UL>

<P><STRONG><a name="[59]"></a>re_send_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app.o(.text.re_send_enable))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_press_timeout_event
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_key_ntc_packet
</UL>

<P><STRONG><a name="[84]"></a>rf_driver_init</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, 433_send_driver.o(.text.rf_driver_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rf_driver_init &rArr; LL_TIM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[85]"></a>rf_send</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, 433_send_driver.o(.text.rf_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rf_send &rArr; protocol_command_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocol_command_encode
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_send_loop
</UL>

<P><STRONG><a name="[87]"></a>rf_send_is_working</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, 433_send_driver.o(.text.rf_send_is_working))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_send_loop
</UL>

<P><STRONG><a name="[66]"></a>rf_send_loop</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, app.o(.text.rf_send_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rf_send_loop &rArr; clock_time_exceed &rArr; clock_time &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_send_is_working
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_send
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time_exceed
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_time
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[62]"></a>rtt_printf</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, segger_rtt_printf.o(.text.rtt_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = rtt_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_loop
</UL>

<P><STRONG><a name="[89]"></a>send_data_check_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, function_handle.o(.text.send_data_check_set))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_key_ntc_packet
</UL>

<P><STRONG><a name="[67]"></a>send_key_ntc_packet</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, function_handle.o(.text.send_key_ntc_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = send_key_ntc_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_data_check_set
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_open
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;re_send_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;two_key_long_press_event
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_key_long_press_event
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;one_key_short_press_event
</UL>

<P><STRONG><a name="[77]"></a>set_cutoff_frequency</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, imualgo_axis9.o(.text.set_cutoff_frequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = set_cutoff_frequency &rArr; tanf &rArr; __mathlib_rredf2 &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_algo_init
</UL>

<P><STRONG><a name="[8c]"></a>systick_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32f002b_ll_utils.o(.text.systick_init))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_init
</UL>

<P><STRONG><a name="[5f]"></a>two_key_long_press_event</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, keyboard_handle.o(.text.two_key_long_press_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = two_key_long_press_event &rArr; send_key_ntc_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_key_ntc_packet
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_combination_events
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_loop
</UL>

<P><STRONG><a name="[5d]"></a>two_key_short_press_event</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, keyboard_handle.o(.text.two_key_short_press_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = two_key_short_press_event &rArr; key_combination_events
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_combination_events
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_close
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_open
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyboard_loop
</UL>

<P><STRONG><a name="[61]"></a>user_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app.o(.text.user_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = user_init &rArr; qmi8658a_setup_init &rArr; qst_algo_init &rArr; set_cutoff_frequency &rArr; tanf &rArr; __mathlib_rredf2 &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_driver_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keybroad_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_pair_id_read
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qmi8658a_setup_init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_iic_config
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_RCC_HSI_48MConfig
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_status_init
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>wrap_PI</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, imualgo_axis9.o(.text.wrap_PI))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = wrap_PI &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
</UL>

<P><STRONG><a name="[95]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rredf.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
</UL>

<P><STRONG><a name="[96]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
</UL>

<P><STRONG><a name="[8f]"></a>__mathlib_flt_infnan</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, funder.o(i.__mathlib_flt_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __mathlib_flt_infnan
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
</UL>

<P><STRONG><a name="[91]"></a>__mathlib_flt_infnan2</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, funder.o(i.__mathlib_flt_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __mathlib_flt_infnan2 &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
</UL>

<P><STRONG><a name="[92]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_flt_invalid &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
</UL>

<P><STRONG><a name="[93]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __mathlib_flt_underflow
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
</UL>

<P><STRONG><a name="[94]"></a>__mathlib_rredf2</STRONG> (Thumb, 366 bytes, Stack size 48 bytes, rredf.o(i.__mathlib_rredf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = __mathlib_rredf2 &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[a8]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a9]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[aa]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[97]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sinf
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2f
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
</UL>

<P><STRONG><a name="[7f]"></a>asinf</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, asinf.o(i.asinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = asinf &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
</UL>

<P><STRONG><a name="[7d]"></a>atan2f</STRONG> (Thumb, 592 bytes, Stack size 48 bytes, atan2f.o(i.atan2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = atan2f &rArr; __mathlib_flt_infnan2 &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan2
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_init
</UL>

<P><STRONG><a name="[1e]"></a>cosf</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, cosf.o(i.cosf))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = cosf &rArr; __mathlib_rredf2 &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imualgo_axis9.o(.text.qst_fusion_update)
</UL>
<P><STRONG><a name="[1f]"></a>sinf</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, sinf.o(i.sinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = sinf &rArr; __mathlib_rredf2 &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imualgo_axis9.o(.text.qst_fusion_update)
</UL>
<P><STRONG><a name="[20]"></a>sqrtf</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, sqrtf.o(i.sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sqrtf &rArr; _fsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_update
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asinf
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qst_fusion_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imualgo_axis9.o(.text.qst_fusion_update)
</UL>
<P><STRONG><a name="[8a]"></a>tanf</STRONG> (Thumb, 312 bytes, Stack size 32 bytes, tanf.o(i.tanf))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = tanf &rArr; __mathlib_rredf2 &rArr; __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cutoff_frequency
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4f]"></a>LL_IOP_GRP1_EnableClock</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, i2c_driver.o(.text.LL_IOP_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_IOP_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_iic_config
</UL>

<P><STRONG><a name="[53]"></a>LL_I2C_ClearFlag_ADDR</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, i2c_driver.o(.text.LL_I2C_ClearFlag_ADDR))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_I2C_ClearFlag_ADDR
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_read_byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write_byte
</UL>

<P><STRONG><a name="[3c]"></a>LL_RCC_LSI_GetFreq</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, py32f002b_ll_rcc.o(.text.LL_RCC_LSI_GetFreq))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[3e]"></a>_DoInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, segger_rtt.o(.text._DoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[40]"></a>_GetAvailWriteSpace</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, segger_rtt.o(.text._GetAvailWriteSpace))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[41]"></a>_WriteNoCheck</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, segger_rtt.o(.text._WriteNoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[42]"></a>_WriteBlocking</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, segger_rtt.o(.text._WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[44]"></a>_StoreChar</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, segger_rtt_printf.o(.text._StoreChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
</UL>

<P><STRONG><a name="[45]"></a>_PrintUnsigned</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, segger_rtt_printf.o(.text._PrintUnsigned))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
